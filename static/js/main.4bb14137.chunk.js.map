{"version":3,"sources":["Component/Movies.js","Routes/Home.js","Routes/About.js","Component/Navigation.js","Routes/Detail.js","App5.js","index.js"],"names":["Movies","title","year","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","About","props","console","log","Navigation","Detail","location","history","App5","path","exact","element","ReactDOM","render","document","getElementById"],"mappings":"qWAsCeA,MAjCf,YAAuD,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OAC1C,OACI,qBAAKC,UAAU,QAAf,SACI,eAAC,IAAD,CACAC,GAAI,CACAC,SAAU,iBACVC,MAAM,CAACP,OAAMD,QAAOE,UAASC,SAAQC,WAHzC,UAMA,qBAAKK,IAAKN,EAAQO,IAAKV,EAAOA,MAAOA,IACrC,sBAAKK,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,aAAd,SAA4BJ,IAC5B,oBAAII,UAAU,eAAd,SACKD,EAAOO,KAAI,SAACC,EAAMC,GACf,OAAO,oBAAgBR,UAAU,cAA1B,SAAyCO,GAAhCC,QAGxB,mBAAGR,UAAU,gBAAb,SAA8BH,EAAQY,MAAM,EAAE,gBCgD/CC,G,kNAlEXP,MAAM,CACFQ,WAAU,EACVC,OAAO,I,EAIXC,U,sBAAU,8BAAAC,EAAA,sEAmBIC,IAAMC,IAAI,4DAnBd,gBAiBQJ,EAjBR,EAeFK,KAEIA,KAAML,OAKd,EAAKM,SAAS,CAACN,OAAQA,EAAQD,WAAU,IAtBnC,2C,uDA2BV,WACIQ,KAAKN,c,oBAET,WAAS,IAAD,EACqBM,KAAKhB,MAAvBQ,EADH,EACGA,UAAUC,EADb,EACaA,OACjB,OACA,yBAASZ,UAAU,YAAnB,SACKW,EACG,qBAAKX,UAAU,SAAf,SACI,sBAAMA,UAAU,cAAhB,4BAGA,qBAAKA,UAAU,SAAf,SAESY,EAAON,KAAI,SAACc,GAAD,OAER,aADA,CACC,EAAD,CAEIC,GAAID,EAAMC,GACVzB,KAAMwB,EAAMxB,KACZD,MAAOyB,EAAMzB,MACbE,QAASuB,EAAMvB,QACfC,OAAQsB,EAAME,mBACdvB,OAAQqB,EAAMrB,QANTqB,EAAMC,e,GAnD5BE,IAAMC,Y,qBCcVC,MAdf,SAAeC,GAGX,OAFAC,QAAQC,IAAIF,GAGV,qBAAK1B,UAAU,kBAAf,SACI,uI,MCWK6B,MAhBf,WAEI,OACI,sBAAK7B,UAAU,MAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,kBAOA,cAAC,IAAD,CAAMA,GAAG,SAAT,uBCSG6B,E,uKApBX,WAAoB,IAAD,EACaX,KAAKO,MAA1BK,EADQ,EACRA,SAAUC,EADF,EACEA,QAEjBL,QAAQC,IAAI,KAAKT,KAAKO,OACtBC,QAAQC,IAAII,GAETD,EAAS5B,Q,oBAIhB,WAEI,OADiBgB,KAAKO,MAAfK,SACK5B,MACD,yCAEA,S,GAjBEoB,IAAMC,WCmBZS,MAbf,WACI,OACI,eAAC,IAAD,WACI,cAAC,EAAD,IACA,eAAC,IAAD,WACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,QAAS,cAAC,EAAD,MACtC,cAAC,IAAD,CAAOF,KAAK,SAASE,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOF,KAAK,gBAAgBE,QAAS,cAAC,EAAD,aCVjDC,IAASC,OAGL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.4bb14137.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport './Movies.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Movies({title, year, summary, poster,genres}){\r\n    return (\r\n        <div className=\"movie\">\r\n            <Link \r\n            to={{\r\n                pathname: \"./movie-detail\",\r\n                state:{year, title, summary, poster, genres},\r\n            }}\r\n            >\r\n            <img src={poster} alt={title} title={title} />\r\n            <div className=\"movie_data\">\r\n                <h3 className=\"movie_title\">{title}</h3>\r\n                <h5 className=\"movie_year\">{year}</h5>\r\n                <ul className=\"movie_genres\">\r\n                    {genres.map((genre,index)=>{\r\n                        return <li key={index} className=\"movie_genre\">{genre}</li>;\r\n                    })}\r\n                </ul>\r\n                <p className=\"movie_summary\">{summary.slice(0,180)}</p>\r\n            </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovies.propTypes={\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movies;","import React from \"react\";\r\nimport axios from 'axios';\r\nimport Movie from '../Component/Movies';\r\nimport './Home.css';\r\nclass Home extends React.Component{\r\n    state={\r\n        isLoading:true,\r\n        movies:[],\r\n    };\r\n\r\n    /* async - getMovies() 실행에 시간이 필요함을 알려줌(비동기함수 명시) */\r\n    getMovies=async ()=>{\r\n        /* 일정 초 후에 실행 */\r\n        /*setTimeout(()=>{\r\n            this.setState({isLoading:false});\r\n        },6000);*/\r\n\r\n        //영화 데이터 로딩\r\n        /* \r\n        자바 스크립트 fetch 함수\r\n        Axios 라이브러리(도구)\r\n        YTS 에서 영화 API 가져오기\r\n        */\r\n        /*await - axios.get() 실행에 대기 요청(실행 완료후 계속진행)*/\r\n        /* 주소에 sort_by=rating 를 추가해 내림차순으로 정렬된 데이터 가져옴*/\r\n        const {\r\n            data:{\r\n                /* 구조분해 할당 이용해 movies에 데이터 배열 저장 */\r\n                data:{movies},\r\n            },\r\n        } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n        \r\n        /* state의 movies 변수(배열)에 지역변수(배열) movies 저장 */\r\n        this.setState({movies: movies, isLoading:false});\r\n        /* state 변수와 지역변수의 명칭이 같으므로 축약 가능 */\r\n        /* this.setState({movies}); */\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.getMovies();\r\n    }\r\n    render(){\r\n        const {isLoading,movies}=this.state;\r\n        return (\r\n        <section className=\"container\">\r\n            {isLoading?(\r\n                <div className=\"loader\">\r\n                    <span className=\"loader_text\">'Loading...'</span>\r\n                </div>\r\n                ): (\r\n                    <div className=\"movies\">\r\n                        {\r\n                             movies.map((movie)=>(\r\n                                /* Movie 컴포넌트 출력 */\r\n                                <Movie\r\n                                    key={movie.id}\r\n                                    id={movie.id}\r\n                                    year={movie.year}\r\n                                    title={movie.title}\r\n                                    summary={movie.summary}\r\n                                    poster={movie.medium_cover_image}\r\n                                    genres={movie.genres}\r\n                                />\r\n                        ))}\r\n                    </div>\r\n                )}\r\n        </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport './About.css';\r\n\r\n\r\nfunction About(props){\r\n    console.log(props);\r\n    \r\n    return (\r\n      <div className=\"about_container\">\r\n          <span>\r\n              \"Freedom is the free to say that two plus two make four.\r\n              If that is granted, all else\r\n              foallows.\"\r\n          </span>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation(){\r\n    /* Link 컴포넌트는 반드시 BrowserRouter 안에 들어가야함 */\r\n    return(\r\n        <div className=\"nav\">\r\n            <Link to=\"/\">Home</Link>\r\n            {/* \r\n            Link to={{pathname:\"/about\", state:{fromNavigation:true}}}\r\n            pathname: URL , \r\n            state:route props에 보내줄 데이터 \r\n                location을 유지할 state 값\r\n            */}\r\n            <Link to=\"/about\">About</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\n\r\nclass Detail extends React.Component{\r\n    /* 오류.... */\r\n    componentDidMount(){\r\n        const {location, history} = this.props;\r\n\r\n        console.log(\"dd\"+this.props);\r\n        console.log(history);\r\n\r\n        if(location.state===undefined){\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        const {location}=this.props;\r\n        if(location.state){\r\n            return <span>hello</span>;   \r\n        } else{\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from \"react\";\r\nimport Home from './Routes/Home';\r\nimport './App5.css';\r\nimport {BrowserRouter, Routes, Route} from 'react-router-dom';\r\nimport About from './Routes/About';\r\nimport Navigation from \"./Component/Navigation\";\r\nimport Detail from \"./Routes/Detail\";\r\n\r\nfunction App5() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Navigation/>\r\n            <Routes>\r\n            <Route path=\"/\" exact={true} element={<Home/>}/>\r\n            <Route path=\"/about\" element={<About/>}/>\r\n            <Route path=\"/movie-detail\" element={<Detail/>}/>\r\n            </Routes>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App5;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App5 from './App5'; /*App 컴포넌트 임포트*/\n\n/*리엑트 앱 화면 그리기 (컴포넌트, 그려질 위치)*/\nReactDOM.render(\n  /* 컴포넌트 */\n  /* 컴포넌트 반환값을 화면에 그린다 */\n    <App5 />,\n  document.getElementById('root') /* id가 동일한 엘리먼트에 연결*/\n);"],"sourceRoot":""}